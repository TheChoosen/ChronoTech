#!/usr/bin/env python3
"""
Script de migration - Ajout colonne d√©partement pour v√©hicules
Date: 2025-09-04
"""

import mysql.connector
import sys

def get_db_connection():
    """Connexion √† la base MySQL"""
    try:
        return mysql.connector.connect(
            host='192.168.50.101',
            user='gsicloud',
            password='TCOChoosenOne204$',
            database='bdm',
            port=3306,
            autocommit=False
        )
    except mysql.connector.Error as e:
        print(f"‚ùå Erreur connexion DB: {e}")
        return None

def apply_department_migration():
    """Applique la migration d√©partement v√©hicules"""
    print("üìç Application de la migration d√©partement v√©hicules...")
    
    conn = get_db_connection()
    if not conn:
        return False
    
    cursor = conn.cursor()
    
    try:
        # 1. V√©rifier si la colonne department existe d√©j√†
        print("üîç V√©rification existence colonne department...")
        cursor.execute("""
            SELECT COLUMN_NAME 
            FROM INFORMATION_SCHEMA.COLUMNS 
            WHERE TABLE_SCHEMA = 'bdm' 
            AND TABLE_NAME = 'vehicles' 
            AND COLUMN_NAME = 'department'
        """)
        
        column_exists = cursor.fetchone()
        
        if not column_exists:
            print("üîß Ajout colonne department...")
            cursor.execute("""
                ALTER TABLE vehicles 
                ADD COLUMN department VARCHAR(100) DEFAULT NULL 
                COMMENT 'D√©partement ou emplacement du v√©hicule dans l\\'entreprise'
            """)
            print("‚úÖ Colonne department ajout√©e!")
        else:
            print("‚ÑπÔ∏è Colonne department existe d√©j√†")
        
        # 2. Cr√©er l'index (seulement s'il n'existe pas)
        print("üîß Cr√©ation index d√©partement...")
        try:
            cursor.execute("CREATE INDEX idx_vehicles_department ON vehicles(department)")
            print("‚úÖ Index cr√©√©!")
        except mysql.connector.Error as e:
            if "Duplicate key name" in str(e):
                print("‚ÑπÔ∏è Index existe d√©j√†")
            else:
                raise e
        
        # 3. Cr√©er la table departments si elle n'existe pas
        print("üîß Cr√©ation table departments...")
        cursor.execute("""
            CREATE TABLE IF NOT EXISTS departments (
                id INT AUTO_INCREMENT PRIMARY KEY,
                name VARCHAR(100) NOT NULL UNIQUE,
                description TEXT,
                created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
            ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci
        """)
        print("‚úÖ Table departments cr√©√©e/v√©rifi√©e!")
        
        # 4. Ajouter les d√©partements par d√©faut
        departments = [
            ('Maintenance', 'V√©hicules d\'entretien et de maintenance'),
            ('Commercial', 'V√©hicules des √©quipes commerciales'),
            ('Direction', 'V√©hicules de direction'),
            ('Service Client', 'V√©hicules du service client'),
            ('Technique', 'V√©hicules techniques et d\'intervention'),
            ('Logistique', 'V√©hicules de livraison et transport')
        ]
        
        print("üîß Ajout d√©partements par d√©faut...")
        for name, description in departments:
            try:
                cursor.execute("""
                    INSERT INTO departments (name, description) 
                    VALUES (%s, %s)
                """, (name, description))
            except mysql.connector.Error as e:
                if "Duplicate entry" in str(e):
                    print(f"‚ÑπÔ∏è D√©partement '{name}' existe d√©j√†")
                else:
                    raise e
        
        # 5. Mettre √† jour quelques v√©hicules avec des exemples
        print("üîß Mise √† jour exemples v√©hicules...")
        cursor.execute("SELECT id FROM vehicles LIMIT 3")
        vehicle_ids = cursor.fetchall()
        
        if vehicle_ids:
            sample_departments = ['Maintenance', 'Commercial', 'Technique']
            for i, (vehicle_id,) in enumerate(vehicle_ids):
                if i < len(sample_departments):
                    cursor.execute("""
                        UPDATE vehicles 
                        SET department = %s 
                        WHERE id = %s AND department IS NULL
                    """, (sample_departments[i], vehicle_id))
        
        # Validation finale
        cursor.execute("DESCRIBE vehicles")
        columns = cursor.fetchall()
        department_found = any('department' in str(col) for col in columns)
        
        if department_found:
            cursor.execute("SELECT COUNT(*) FROM departments")
            dept_count = cursor.fetchone()[0]
            
            cursor.execute("SELECT COUNT(*) FROM vehicles WHERE department IS NOT NULL")
            updated_vehicles = cursor.fetchone()[0]
            
            print("‚úÖ Migration d√©partement r√©ussie!")
            print(f"üìä {dept_count} d√©partements disponibles")
            print(f"üöó {updated_vehicles} v√©hicules avec d√©partement assign√©")
            
            conn.commit()
            return True
        else:
            print("‚ùå Validation √©chou√©e")
            return False
            
    except mysql.connector.Error as e:
        print(f"‚ùå Erreur migration: {e}")
        conn.rollback()
        return False
    finally:
        cursor.close()
        conn.close()

if __name__ == "__main__":
    success = apply_department_migration()
    if success:
        print("\nüéâ Migration termin√©e avec succ√®s!")
        sys.exit(0)
    else:
        print("\nüí• Migration √©chou√©e!")
        sys.exit(1)
